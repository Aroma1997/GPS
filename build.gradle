buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
	}
}

plugins {
	id "com.matthewprenger.cursegradle" version "1.0.9"
}

apply plugin: 'net.minecraftforge.gradle.forge'

ext.configFile = file "build.properties"

configFile.withReader {
	def prop = new Properties()
	prop.load(it)
	project.ext.config = new ConfigSlurper().parse prop
}

configurations {
	shade
	compile.extendsFrom shade
}

version = config.mod_version
group = config.mod_group
archivesBaseName = config.mod_name

if (System.getenv().BUILD_NUMBER)
	version = "${config.mod_version}.b${System.getenv().BUILD_NUMBER}"

minecraft {
	version = "${config.mc_version}-${config.forge_version}"
	runDir = "run"
	
	mappings = "${config.mcp_version}"
	makeObfSourceJar = false
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
	maven {
		name = "aroma"
		url = "https://files.aroma1997.org/maven/"
	}
}

dependencies {
	//required for trilateration
	shade 'com.lemmingapex.trilateration:trilateration:1.0.2'
	
	//required for trilateration plugin
	compile 'info.journeymap:journeymap-api:1.10.2-1.3'
	
	//core
	compile "aroma1997.core:Aroma1997Core-${config.mc_version}:+:deobf"
}

reobfJar {
	//Relocate org.apache.commons.math3, because forge doesn't want to let us use it when it's not located
	addExtraSrgLine "PK: org/apache/commons/math3 gps/org/apache/commons/math3"
	addExtraSrgLine "PK: com/lemmingapex/trilateration gps/com/lemmingapex/trilateration"
}

processResources
{
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		include '**/reference.properties'

		expand 'version': version, 'mcversion': config.mc_version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
		exclude '**/reference.properties'
	}
}

jar {
	configurations.shade.each { dep ->
		from(project.zipTree(dep)){
			exclude 'META-INF', 'META-INF/**'
		}
	}
	appendix = config.mc_version
}

task deobfJar(type: Jar) {
	configurations.shade.each { dep ->
		from(project.zipTree(dep)){
			exclude 'META-INF', 'META-INF/**'
		}
	}
	from sourceSets.main.output
	appendix = config.mc_version
	classifier = 'deobf'
}

artifacts {
	archives deobfJar
}

curseforge {
	apiKey = project.hasProperty('curseforge_apikey') ? project.curseforge_apikey : '0'
	project {
		id = config.curse_project_id
		changelog = "N/A"
		changelogType = 'html'
		releaseType = version.contains('b') ? 'beta' : 'release'
		addArtifact deobfJar
		relations {
			requiredLibrary 'aroma1997core'
		}
	}
}